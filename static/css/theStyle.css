/*********************************************/
/* Global Variables */
/*********************************************/

:root {
    /* color */
    --naturalKeyColor: white;
    --blackKeyColor: black;
    --borderColor: black;
    --highlightColor: #b22;
    --selectColor: #68b;

    /* dimensions */

    /* black keys */
    --blackKeyHeight: 350px;
    --blackKeyWidth: 70px;

    /* white keys */
    --whiteKeyHeight: 600px;
    --whiteKeyWidth: 100px;
    --leftOffset: -35px;
    --thinWidth: 30px;
    --midWidth: 65px;

    --borderThickness: 2px;
    --borderOffset: 4px;

    --numberOfKeys: 17;

    --minDepth: 5;
}

/*********************************************/
/* Types */
/*********************************************/

* {
    box-sizing: border-box;
}

html, body {
    padding: 0;
    margin: 0; /* no white space around keyboard */
}

div {
    width: calc(var(--whiteKeyWidth) * var(--numberOfKeys));
    margin: auto;
}

/*********************************************/
/* Classes */
/*********************************************/

.key {
    background: var(--naturalKeyColor);
}
.key:after {
    background: var(--naturalKeyColor);
}

.highlightKey {
    background: var(--highlightColor);
}
.highlightKey:after {
    background: var(--highlightColor);
}

.selectKey {
    background: var(--selectColor);
}
.selectKey:after {
    background: var(--selectColor);
}

.blackKey {
    background: var(--blackKeyColor);
    display: inline-block;
    width: var(--blackKeyWidth);
    height: var(--blackKeyHeight);
    /*position: relative;*/
    z-index: var(--minDepth); /* place above other keys */
}

.highlightBlackKey {
    background: var(--highlightColor);
    display: inline-block;
    width: var(--blackKeyWidth);
    height: var(--blackKeyHeight);
    /*position: relative;*/
    /*box-shadow: inset 4px 4px 0 -2px var(--borderColor), inset -4px -4px 0 -2px var(--borderColor);*/
    box-shadow: inset var(--borderOffset) var(--borderOffset) 0 calc(-1 * var(--borderThickness)) var(--borderColor), inset calc(-1 * var(--borderOffset)) calc(-1 * var(--borderOffset)) 0 calc(-1 * var(--borderThickness)) var(--borderColor);
    z-index: var(--minDepth); /* place above other keys */
}

.selectBlackKey {
    background: var(--selectColor);
    display: inline-block;
    width: var(--blackKeyWidth);
    height: var(--blackKeyHeight);
    /*position: relative;*/
    /*box-shadow: inset 4px 4px 0 -2px var(--borderColor), inset -4px -4px 0 -2px var(--borderColor);*/
    box-shadow: inset var(--borderOffset) var(--borderOffset) 0 calc(-1 * var(--borderThickness)) var(--borderColor), inset calc(-1 * var(--borderOffset)) calc(-1 * var(--borderOffset)) 0 calc(-1 * var(--borderThickness)) var(--borderColor);
    z-index: var(--minDepth); /* place above other keys */
}

/* white key in between two black keys */
.cutKey {
    display: inline-block;
    width: var(--thinWidth);
    height: var(--blackKeyHeight);
    position: relative;
    /* black line at top of white key */
    /*box-shadow: inset 0 4px 0 -2px var(--borderColor);*/
    box-shadow: inset 0 var(--borderOffset) 0 calc(-1 * var(--borderThickness)) var(--borderColor);
}
.cutKey:after {
    content: "";
    top: var(--blackKeyHeight);
    left: var(--leftOffset);
    width: var(--whiteKeyWidth);
    height: calc(var(--whiteKeyHeight) - var(--blackKeyHeight));
    position: absolute;
    /* black line on bottom-left, bottom, and bottom-right of white key */
    /*box-shadow: inset 4px 0 0 -2px var(--borderColor), inset -4px -4px 0 -2px var(--borderColor);*/
    box-shadow: inset var(--borderOffset) 0 0 calc(-1 * var(--borderThickness)) var(--borderColor), inset calc(-1 * var(--borderOffset)) calc(-1 * var(--borderOffset)) 0 calc(-1 * var(--borderThickness)) var(--borderColor);
}

/* white keys to the left of black keys */
.lStraightKey {
    display: inline-block;
    width: var(--midWidth);
    height: var(--blackKeyHeight);
    position: relative;
    /* black line on top and top-left of white key */
    /*box-shadow: inset 4px 4px 0 -2px var(--borderColor);*/
    box-shadow: inset var(--borderOffset) var(--borderOffset) 0 calc(-1 * var(--borderThickness)) var(--borderColor);
}
.lStraightKey:after {
    content: "";
    top: var(--blackKeyHeight);
    width: var(--whiteKeyWidth);
    height: calc(var(--whiteKeyHeight) - var(--blackKeyHeight));
    position: absolute;
    /* black line on bottom-left, bottom and bottom-right of white key */
    /*box-shadow: inset 4px 0 0 -2px var(--borderColor), inset -4px -4px 0 -2px var(--borderColor);*/
    box-shadow: inset var(--borderOffset) 0 0 calc(-1 * var(--borderThickness)) var(--borderColor), inset calc(-1 * var(--borderOffset)) calc(-1 * var(--borderOffset))  0 calc(-1 * var(--borderThickness)) var(--borderColor);
}

/* white keys to the right of black keys */
.rStraightKey {
    display: inline-block;
    width: var(--midWidth);
    height: var(--blackKeyHeight);
    position: relative;
    /* black line on top and top-right of white key */
    /*box-shadow: inset 0 4px 0 -2px var(--borderColor), inset -4px 0 0 -2px var(--borderColor);*/
    box-shadow: inset 0 var(--borderOffset) 0 calc(-1 * var(--borderThickness)) var(--borderColor), inset calc(-1 * var(--borderOffset)) 0 0 calc(-1 * var(--borderThickness)) var(--borderColor);
}
.rStraightKey:after {
    content: "";
    top: var(--blackKeyHeight);
    left: var(--leftOffset);
    width: var(--whiteKeyWidth);
    height: calc(var(--whiteKeyHeight) - var(--blackKeyHeight));
    position: absolute;
    /* black line on bottom-left, bottom and bottom-right of white key */
    /*box-shadow: inset 4px 0 0 -2px var(--borderColor), inset -4px -4px 0 -2px var(--borderColor);*/
    box-shadow: inset var(--borderOffset) 0 0 calc(-1 * var(--borderThickness)) var(--borderColor), inset calc(-1 * var(--borderOffset)) calc(-1 * var(--borderOffset)) 0 calc(-1 * var(--borderThickness)) var(--borderColor);
}

/*********************************************/
/* IDs */
/*********************************************/

#keyboard {
    /*width: calc(var(--whiteKeyWidth) * var(--numberOfKeys));*/
    min-height: var(--whiteKeyHeight);
    /*margin: auto;*/
}

#noteSelection {
    /*width: calc(var(--whiteKeyWidth) * var(--numberOfKeys));*/
    /*margin: auto;*/
}

#tempoSelection {
}

#conceptOptions {
}

#highlightOptions {
}

/*********************************************/
/* Responsive Web Design */
/*********************************************/
/* Used to rescale keyboard elements to best fit screen */

@media only screen and (max-width: 1800px) {
    :root {
        /* dimensions */

        /* black keys */
        --blackKeyHeight: 233.333px;
        --blackKeyWidth: 46.667px;

        /* white keys */
        --whiteKeyHeight: 400px;
        --whiteKeyWidth: 66.667px;
        --leftOffset: -23.333px;
        --thinWidth: 20px;
        --midWidth: 43.333px;
    }
}

@media only screen and (max-width: 1200px) {
    :root {
        /* dimensions */

        /* black keys */
        --blackKeyHeight: 175px;
        --blackKeyWidth: 35px;

        /* white keys */
        --whiteKeyHeight: 300px;
        --whiteKeyWidth: 50px;
        --leftOffset: -17.5px;
        --thinWidth: 15px;
        --midWidth: 32.5px;

        --borderThickness: 1px;
        --borderOffset: 2px;
    }
}

@media only screen and (max-width: 900px) {
    :root {
        /* dimensions */

        /* black keys */
        --blackKeyHeight: 116.667px;
        --blackKeyWidth: 23.333px;

        /* white keys */
        --whiteKeyHeight: 200px;
        --whiteKeyWidth: 33.333px;
        --leftOffset: -11.667px;
        --thinWidth: 10px;
        --midWidth: 21.667px;
    }
}